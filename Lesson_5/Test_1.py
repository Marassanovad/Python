#   Анонимные, lambda функции
def select(f, col):
    return [f(x) for x in col]
def where(f, col):
    return [x for x in col if f(x)]
data = '1 2 3 5 8 15 23 38'.split()
data = select(int, data)
data = where(lambda e: not e % 2, data)
data = list(select(lambda e: (e, e**2), data))
print(data)

# Функция map() применяет указанную функцию к каждому элементу 
# итерируемого объекта и возвращает итератор с новыми объектами.
# f(x) ⇒ x + 10
# Нельзя пройтись дважды

# Функция filter
# Функция filter() применяет указанную функцию к каждому элементу итерируемого 
# объекта и возвращает итератор с теми объектами, для которых функция вернула True.

# Функция zip() применяется к набору итерируемых объектов и возвращает итератор
#  с кортежами из элементов входных данных.
# Количество элементов в результате равно минимальному 
# количеству элементов входного набора

# Функция enumerate
# Функция enumerate() применяется к итерируемому объекту и возвращает новый 
# итератор с кортежами из индекса и элементов входных данных.


data = '1 2 3 5 8 15 23 38'.split()
data = list(map(int, data))
data = list(filter(lambda e: not e % 2, data))
data = list(map(lambda e: (e, e**2), data))
print(data)
 